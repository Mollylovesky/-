# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindowyuanban.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QComboBox, QLineEdit, QListWidget, QListWidgetItem, QCheckBox, QApplication


class ComboCheckBox(QComboBox):
    def __init__(self, parent):
        super(ComboCheckBox, self).__init__(parent)
        self.comboBox_2 = None  # 设置 comboBox_2 为成员变量
        self.items1 = None
        self.text = QLineEdit()  #显示已选项目
        self.q = QListWidget()#下拉的框
        self.setView(self.q)#调用下拉的框
        self.state = 0  # 记载打勾

    def all_selected(self):

        # change state
        if self.state == 0:
            self.state = 1
            for i in range(1, len(self.items)):
                self.box_list[i].setChecked(True)
        else:
            self.state = 0
            for i in range(1, len(self.items)):
                self.box_list[i].setChecked(False)
            self.show_selected()

    def get_selected(self) -> dict:

        ret = {}
        for i in range(1, len(self.items)):
            if self.box_list[i].isChecked():
                ret[self.items[i]] = self.values[i]
        return ret

    def show_selected(self):

        self.text.clear()
        ret = ''
        selected = self.get_selected()
        for key, value in selected.items():
            ret += f"{key}; "
        self.text.setText(ret)

    def update_items(self):
        self.items = ["全选"] + list(self.items1.keys())
        self.values = [None] + list(self.items1.values())
        self.box_list = []
        self.q.clear()
        for i in range(len(self.items)):
            self.box_list.append(QCheckBox())
            self.box_list[i].setText(self.items[i])
            item = QListWidgetItem(self.q)
            self.q.setItemWidget(item, self.box_list[i])
            if i == 0:
                self.box_list[i].stateChanged.connect(self.all_selected)
            else:
                self.box_list[i].stateChanged.connect(self.show_selected)
        self.setLineEdit(self.text)
        self.setModel(self.q.model())

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1034, 758)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/ico_UHelper.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(QtGui.QIcon("./img/9.ico"))
        # MainWindow.setWindowIcon(icon)
        self.UHelperwidget = QtWidgets.QWidget(MainWindow)
        self.UHelperwidget.setMinimumSize(QtCore.QSize(0, 0))
        self.UHelperwidget.setObjectName("UHelperwidget")
        self.textEdit = QtWidgets.QTextBrowser(self.UHelperwidget)
        self.textEdit.setGeometry(QtCore.QRect(300, 10, 681, 201))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.groupBox_uartSetting = QtWidgets.QGroupBox(self.UHelperwidget)
        self.groupBox_uartSetting.setGeometry(QtCore.QRect(9, 8, 261, 311))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.groupBox_uartSetting.setFont(font)
        self.groupBox_uartSetting.setObjectName("groupBox_uartSetting")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_uartSetting)
        self.gridLayout.setObjectName("gridLayout")
        self.label_uartCheckBit = QtWidgets.QLabel(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_uartCheckBit.setFont(font)
        self.label_uartCheckBit.setObjectName("label_uartCheckBit")
        self.gridLayout.addWidget(self.label_uartCheckBit, 6, 0, 1, 1)
        self.comboBox_xonxoff = QtWidgets.QComboBox(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox_xonxoff.setFont(font)
        self.comboBox_xonxoff.setObjectName("comboBox_xonxoff")
        self.comboBox_xonxoff.addItem("")
        self.comboBox_xonxoff.addItem("")
        self.comboBox_xonxoff.addItem("")
        self.gridLayout.addWidget(self.comboBox_xonxoff, 8, 1, 1, 1)
        self.comboBox_stopbits = QtWidgets.QComboBox(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox_stopbits.setFont(font)
        self.comboBox_stopbits.setObjectName("comboBox_stopbits")
        self.comboBox_stopbits.addItem("")
        self.comboBox_stopbits.addItem("")
        self.gridLayout.addWidget(self.comboBox_stopbits, 3, 1, 1, 1)
        self.comboBox_bytesize = QtWidgets.QComboBox(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox_bytesize.setFont(font)
        self.comboBox_bytesize.setObjectName("comboBox_bytesize")
        self.comboBox_bytesize.addItem("")
        self.comboBox_bytesize.addItem("")
        self.comboBox_bytesize.addItem("")
        self.comboBox_bytesize.addItem("")
        self.gridLayout.addWidget(self.comboBox_bytesize, 5, 1, 1, 1)
        self.comboBox_baund = QtWidgets.QComboBox(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox_baund.setFont(font)
        self.comboBox_baund.setObjectName("comboBox_baund")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.comboBox_baund.addItem("")
        self.gridLayout.addWidget(self.comboBox_baund, 2, 1, 1, 1)
        self.label_uartFlowControl = QtWidgets.QLabel(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_uartFlowControl.setFont(font)
        self.label_uartFlowControl.setObjectName("label_uartFlowControl")
        self.gridLayout.addWidget(self.label_uartFlowControl, 8, 0, 1, 1)
        self.label_uartPort = QtWidgets.QLabel(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_uartPort.setFont(font)
        self.label_uartPort.setObjectName("label_uartPort")
        self.gridLayout.addWidget(self.label_uartPort, 1, 0, 1, 1)
        self.label_uartDataLen = QtWidgets.QLabel(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_uartDataLen.setFont(font)
        self.label_uartDataLen.setObjectName("label_uartDataLen")
        self.gridLayout.addWidget(self.label_uartDataLen, 5, 0, 1, 1)
        self.label_uartDps = QtWidgets.QLabel(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_uartDps.setFont(font)
        self.label_uartDps.setObjectName("label_uartDps")
        self.gridLayout.addWidget(self.label_uartDps, 2, 0, 1, 1)
        self.comboBox_parity = QtWidgets.QComboBox(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox_parity.setFont(font)
        self.comboBox_parity.setObjectName("comboBox_parity")
        self.comboBox_parity.addItem("")
        self.comboBox_parity.addItem("")
        self.comboBox_parity.addItem("")
        self.comboBox_parity.addItem("")
        self.comboBox_parity.addItem("")
        self.gridLayout.addWidget(self.comboBox_parity, 6, 1, 1, 1)
        self.label_uartStopBit = QtWidgets.QLabel(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_uartStopBit.setFont(font)
        self.label_uartStopBit.setObjectName("label_uartStopBit")
        self.gridLayout.addWidget(self.label_uartStopBit, 3, 0, 1, 1)
        self.pushButton_connect = QtWidgets.QPushButton(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_connect.setFont(font)
        self.pushButton_connect.setObjectName("pushButton_connect")
        self.gridLayout.addWidget(self.pushButton_connect, 13, 0, 1, 1)
        self.pushButton_disconnect = QtWidgets.QPushButton(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_disconnect.setFont(font)
        self.pushButton_disconnect.setObjectName("pushButton_disconnect")
        self.gridLayout.addWidget(self.pushButton_disconnect, 13, 1, 1, 1)
        self.radioButton_mik53D = QtWidgets.QRadioButton(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.radioButton_mik53D.setFont(font)
        self.radioButton_mik53D.setObjectName("radioButton_mik53D")
        self.gridLayout.addWidget(self.radioButton_mik53D, 12, 1, 1, 1)
        self.radioButton_mik5 = QtWidgets.QRadioButton(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.radioButton_mik5.setFont(font)
        self.radioButton_mik5.setObjectName("radioButton_mik5")
        self.gridLayout.addWidget(self.radioButton_mik5, 12, 0, 1, 1)
        self.radioButton_mik3 = QtWidgets.QRadioButton(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.radioButton_mik3.setFont(font)
        self.radioButton_mik3.setObjectName("radioButton_mik3")
        self.gridLayout.addWidget(self.radioButton_mik3, 9, 1, 1, 1)
        self.radioButton_mip = QtWidgets.QRadioButton(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.radioButton_mip.setFont(font)
        self.radioButton_mip.setObjectName("radioButton_mip")
        self.gridLayout.addWidget(self.radioButton_mip, 9, 0, 1, 1)
        self.comboBox_com = QtWidgets.QComboBox(self.groupBox_uartSetting)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox_com.setFont(font)
        self.comboBox_com.setObjectName("comboBox_com")
        self.gridLayout.addWidget(self.comboBox_com, 1, 1, 1, 1)
        self.pushButton_clear = QtWidgets.QPushButton(self.UHelperwidget)
        self.pushButton_clear.setGeometry(QtCore.QRect(900, 220, 75, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_clear.setFont(font)
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.groupBox_4 = QtWidgets.QGroupBox(self.UHelperwidget)
        self.groupBox_4.setGeometry(QtCore.QRect(660, 250, 321, 71))
        font = QtGui.QFont()
        font.setFamily("宋体")
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.lineEdit_senddata_1 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_senddata_1.setGeometry(QtCore.QRect(20, 30, 41, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_senddata_1.setFont(font)
        self.lineEdit_senddata_1.setObjectName("lineEdit_senddata_1")
        self.lineEdit_senddata_2 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_senddata_2.setGeometry(QtCore.QRect(60, 30, 41, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_senddata_2.setFont(font)
        self.lineEdit_senddata_2.setObjectName("lineEdit_senddata_2")
        self.lineEdit_senddata_3 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_senddata_3.setGeometry(QtCore.QRect(100, 30, 41, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_senddata_3.setFont(font)
        self.lineEdit_senddata_3.setObjectName("lineEdit_senddata_3")
        self.lineEdit_senddata_4 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_senddata_4.setGeometry(QtCore.QRect(140, 30, 41, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_senddata_4.setFont(font)
        self.lineEdit_senddata_4.setText("")
        self.lineEdit_senddata_4.setObjectName("lineEdit_senddata_4")
        self.lineEdit_senddata_5 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_senddata_5.setGeometry(QtCore.QRect(180, 30, 41, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_senddata_5.setFont(font)
        self.lineEdit_senddata_5.setText("")
        self.lineEdit_senddata_5.setObjectName("lineEdit_senddata_5")
        self.buttom_senddata = QtWidgets.QPushButton(self.groupBox_4)
        self.buttom_senddata.setGeometry(QtCore.QRect(240, 30, 75, 31))
        self.buttom_senddata.setMinimumSize(QtCore.QSize(0, 0))
        self.buttom_senddata.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.buttom_senddata.setFont(font)
        self.buttom_senddata.setObjectName("buttom_senddata")
        self.groupBox_5 = QtWidgets.QGroupBox(self.UHelperwidget)
        self.groupBox_5.setGeometry(QtCore.QRect(290, 250, 361, 71))
        font = QtGui.QFont()
        font.setFamily("宋体")
        self.groupBox_5.setFont(font)
        self.groupBox_5.setObjectName("groupBox_5")
        self.textEdit_output = QtWidgets.QPlainTextEdit(self.groupBox_5)
        self.textEdit_output.setGeometry(QtCore.QRect(10, 30, 231, 31))
        self.textEdit_output.setMaximumSize(QtCore.QSize(1952222, 1952222))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.textEdit_output.setFont(font)
        self.textEdit_output.setObjectName("textEdit_output")
        self.buttom_sendout = QtWidgets.QPushButton(self.groupBox_5)
        self.buttom_sendout.setGeometry(QtCore.QRect(260, 30, 75, 31))
        self.buttom_sendout.setMinimumSize(QtCore.QSize(0, 0))
        self.buttom_sendout.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.buttom_sendout.setFont(font)
        self.buttom_sendout.setObjectName("buttom_sendout")
        self.tabWidget = QtWidgets.QTabWidget(self.UHelperwidget)
        self.tabWidget.setGeometry(QtCore.QRect(20, 330, 1001, 381))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(600, 40, 381, 291))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.pushButton_capture = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_capture.setGeometry(QtCore.QRect(270, 240, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_capture.sizePolicy().hasHeightForWidth())
        self.pushButton_capture.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_capture.setFont(font)
        self.pushButton_capture.setObjectName("pushButton_capture")
        self.pushButton_right = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_right.setGeometry(QtCore.QRect(270, 90, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_right.sizePolicy().hasHeightForWidth())
        self.pushButton_right.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_right.setFont(font)
        self.pushButton_right.setObjectName("pushButton_right")
        self.pushButton_search = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_search.setGeometry(QtCore.QRect(40, 190, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_search.sizePolicy().hasHeightForWidth())
        self.pushButton_search.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_search.setFont(font)
        self.pushButton_search.setObjectName("pushButton_search")
        self.pushButton_left = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_left.setGeometry(QtCore.QRect(40, 90, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_left.sizePolicy().hasHeightForWidth())
        self.pushButton_left.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_left.setFont(font)
        self.pushButton_left.setObjectName("pushButton_left")
        self.pushButton_record = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_record.setGeometry(QtCore.QRect(150, 240, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_record.sizePolicy().hasHeightForWidth())
        self.pushButton_record.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_record.setFont(font)
        self.pushButton_record.setObjectName("pushButton_record")
        self.pushButton_up = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_up.setGeometry(QtCore.QRect(150, 40, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_up.sizePolicy().hasHeightForWidth())
        self.pushButton_up.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_up.setFont(font)
        self.pushButton_up.setObjectName("pushButton_up")
        self.pushButton_freeze = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_freeze.setGeometry(QtCore.QRect(40, 240, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_freeze.sizePolicy().hasHeightForWidth())
        self.pushButton_freeze.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_freeze.setFont(font)
        self.pushButton_freeze.setObjectName("pushButton_freeze")
        self.pushButton_ok = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_ok.setGeometry(QtCore.QRect(150, 90, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_ok.sizePolicy().hasHeightForWidth())
        self.pushButton_ok.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_ok.setFont(font)
        self.pushButton_ok.setObjectName("pushButton_ok")
        self.pushButton_down = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_down.setGeometry(QtCore.QRect(150, 140, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_down.sizePolicy().hasHeightForWidth())
        self.pushButton_down.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_down.setFont(font)
        self.pushButton_down.setObjectName("pushButton_down")
        self.pushButton_back = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_back.setGeometry(QtCore.QRect(270, 190, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_back.sizePolicy().hasHeightForWidth())
        self.pushButton_back.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_back.setFont(font)
        self.pushButton_back.setObjectName("pushButton_back")
        self.pushButton_mode = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_mode.setGeometry(QtCore.QRect(150, 190, 75, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_mode.sizePolicy().hasHeightForWidth())
        self.pushButton_mode.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_mode.setFont(font)
        self.pushButton_mode.setObjectName("pushButton_mode")
        self.toolBox = QtWidgets.QToolBox(self.tab)
        self.toolBox.setGeometry(QtCore.QRect(10, 40, 551, 281))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.toolBox.setFont(font)
        self.toolBox.setObjectName("toolBox")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setGeometry(QtCore.QRect(0, 0, 551, 227))
        self.page_3.setObjectName("page_3")
        self.pushButton_act_3 = QtWidgets.QPushButton(self.page_3)
        self.comboBox_2 = ComboCheckBox(self.page_3)
        self.comboBox_2.setGeometry(QtCore.QRect(150, 90, 181, 101))
        self.comboBox_2.setObjectName("comboBox_2")
        self.pushButton_act_3.setGeometry(QtCore.QRect(380, 140, 141, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_act_3.setFont(font)
        self.pushButton_act_3.setStyleSheet("QPushButton{background-color:rgb(78, 118, 118);\n"
"    color:white;\n"
"    border:8px rgb(119, 179, 179);\n"
"    border-radius:3px;\n"
"    border-style:outset;    \n"
"}\n"
"QPushButton:hover{color:black;}\n"
"QPushButton:pressed{background-color:rgb(102, 102, 102);\n"
"border-style:inset;}")
        self.pushButton_act_3.setObjectName("pushButton_act_3")
        self.pushButton_start = QtWidgets.QPushButton(self.page_3)
        self.pushButton_start.setGeometry(QtCore.QRect(380, 90, 141, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_start.setFont(font)
        self.pushButton_start.setStyleSheet("QPushButton{background-color:rgb(78, 118, 118);\n"
"    color:white;\n"
"    border:8px rgb(119, 179, 179);\n"
"    border-radius:3px;\n"
"    border-style:outset;    \n"
"}\n"
"QPushButton:hover{color:black;}\n"
"QPushButton:pressed{background-color:rgb(102, 102, 102);\n"
"border-style:inset;}")
        self.pushButton_start.setObjectName("pushButton_start")
        # self.pushButton_stop = QtWidgets.QPushButton(self.page_3)
        # self.pushButton_stop.setGeometry(QtCore.QRect(360, 10, 181, 51))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
#         self.pushButton_stop.setFont(font)
#         self.pushButton_stop.setStyleSheet("QPushButton{background-color:rgb(78, 118, 118);\n"
# "    color:white;\n"
# "    border:8px rgb(119, 179, 179);\n"
# "    border-radius:3px;\n"
# "    border-style:outset;    \n"
# "}\n"
# "QPushButton:hover{color:black;}\n"
# "QPushButton:pressed{background-color:rgb(102, 102, 102);\n"
# "border-style:inset;}")
        # self.pushButton_stop.setObjectName("pushButton_stop")
        self.label = QtWidgets.QLabel(self.page_3)
        self.label.setGeometry(QtCore.QRect(180, 20, 91, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(self.page_3)
        self.comboBox.setGeometry(QtCore.QRect(10, 90, 121, 101))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.lineEdit_time = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_time.setGeometry(QtCore.QRect(110, 20, 31, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_time.setFont(font)
        self.lineEdit_time.setObjectName("lineEdit_time")
        self.label_5 = QtWidgets.QLabel(self.page_3)
        self.label_5.setGeometry(QtCore.QRect(20, 20, 91, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.lineEdit_time_2 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_time_2.setGeometry(QtCore.QRect(280, 20, 31, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.lineEdit_time_2.setFont(font)
        self.lineEdit_time_2.setObjectName("lineEdit_time_2")
        self.label_6 = QtWidgets.QLabel(self.page_3)
        self.label_6.setGeometry(QtCore.QRect(150, 30, 20, 16))
        self.label_6.setObjectName("label_6")
        self.toolBox.addItem(self.page_3, "")
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setGeometry(QtCore.QRect(0, 0, 551, 227))
        self.page_4.setObjectName("page_4")
        self.pushButton_reset = QtWidgets.QPushButton(self.page_4)
        self.pushButton_reset.setGeometry(QtCore.QRect(350, 10, 75, 23))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_reset.sizePolicy().hasHeightForWidth())
        self.pushButton_reset.setSizePolicy(sizePolicy)
        self.pushButton_reset.setObjectName("pushButton_reset")
        self.tableWidget_panel = QtWidgets.QTableWidget(self.page_4)
        self.tableWidget_panel.setGeometry(QtCore.QRect(0, 50, 561, 221))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_panel.sizePolicy().hasHeightForWidth())
        self.tableWidget_panel.setSizePolicy(sizePolicy)
        self.tableWidget_panel.setObjectName("tableWidget_panel")
        self.tableWidget_panel.setColumnCount(0)
        self.tableWidget_panel.setRowCount(0)
        self.pushButton_create = QtWidgets.QPushButton(self.page_4)
        self.pushButton_create.setGeometry(QtCore.QRect(80, 10, 101, 21))
        self.pushButton_create.setObjectName("pushButton_create")
        self.pushButton_insert = QtWidgets.QPushButton(self.page_4)
        self.pushButton_insert.setGeometry(QtCore.QRect(210, 10, 101, 23))
        self.pushButton_insert.setObjectName("pushButton_insert")
        self.toolBox.addItem(self.page_4, "")
        self.pushButton_compare = QtWidgets.QPushButton(self.tab)
        self.pushButton_compare.setGeometry(QtCore.QRect(804, 10, 151, 23))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_compare.setFont(font)
        self.pushButton_compare.setObjectName("pushButton_compare")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.pushButton_import = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_import.setGeometry(QtCore.QRect(240, 10, 91, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_import.setFont(font)
        self.pushButton_import.setObjectName("pushButton_import")
        self.tableWidget = QtWidgets.QTableWidget(self.tab_3)
        self.tableWidget.setGeometry(QtCore.QRect(10, 70, 961, 271))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.tableWidget.setFont(font)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.pushButton_send_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_send_3.setGeometry(QtCore.QRect(360, 10, 91, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_send_3.setFont(font)
        self.pushButton_send_3.setObjectName("pushButton_send_3")
        self.pushButton_ouput_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_ouput_3.setGeometry(QtCore.QRect(480, 10, 91, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_ouput_3.setFont(font)
        self.pushButton_ouput_3.setObjectName("pushButton_ouput_3")
        self.pushButton_stop_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_stop_3.setGeometry(QtCore.QRect(600, 10, 91, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(10)
        self.pushButton_stop_3.setFont(font)
        self.pushButton_stop_3.setObjectName("pushButton_stop_3")
        self.lineEdit_cycleNum = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_cycleNum.setGeometry(QtCore.QRect(110, 10, 51, 21))
        self.lineEdit_cycleNum.setObjectName("lineEdit_cycleNum")
        self.lineEdit_cycleTime = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_cycleTime.setGeometry(QtCore.QRect(110, 40, 51, 20))
        self.lineEdit_cycleTime.setObjectName("lineEdit_cycleTime")
        self.label_2 = QtWidgets.QLabel(self.tab_3)
        self.label_2.setGeometry(QtCore.QRect(13, 10, 91, 20))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.tab_3)
        self.label_3.setGeometry(QtCore.QRect(10, 40, 91, 20))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.tab_3)
        self.label_4.setGeometry(QtCore.QRect(170, 40, 31, 20))
        self.label_4.setObjectName("label_4")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.UHelperwidget)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1034, 23))
        self.menuBar.setObjectName("menuBar")
        self.menu_file = QtWidgets.QMenu(self.menuBar)
        self.menu_file.setTearOffEnabled(False)
        self.menu_file.setToolTipsVisible(False)
        self.menu_file.setObjectName("menu_file")
        MainWindow.setMenuBar(self.menuBar)
        # self.action_saveRecnews = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/image/export.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        # self.action_saveRecnews.setIcon(icon1)
        # self.action_saveRecnews.setObjectName("action_saveRecnews")
        self.action_savePreferences = QtWidgets.QAction(MainWindow)
        self.action_savePreferences.setObjectName("action_savePreferences")
        self.action_setPreferences = QtWidgets.QAction(MainWindow)
        self.action_setPreferences.setObjectName("action_setPreferences")
        self.action_ASCII = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/image/asciitable.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ASCII.setIcon(icon2)
        self.action_ASCII.setObjectName("action_ASCII")
        self.action_baseConversion = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/image/convert.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_baseConversion.setIcon(icon3)
        self.action_baseConversion.setObjectName("action_baseConversion")
        self.action_aboutUHelper = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/image/about.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_aboutUHelper.setIcon(icon4)
        self.action_aboutUHelper.setObjectName("action_aboutUHelper")
        self.action_aboutAuthor = QtWidgets.QAction(MainWindow)
        self.action_aboutAuthor.setObjectName("action_aboutAuthor")
        self.action_pushbug = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/image/bug.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_pushbug.setIcon(icon5)
        self.action_pushbug.setObjectName("action_pushbug")
        self.action_setFont = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/image/typeface.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_setFont.setIcon(icon6)
        self.action_setFont.setObjectName("action_setFont")
        self.action_styleDefault = QtWidgets.QAction(MainWindow)
        self.action_styleDefault.setCheckable(True)
        self.action_styleDefault.setChecked(True)
        self.action_styleDefault.setObjectName("action_styleDefault")
        self.action_styleDark = QtWidgets.QAction(MainWindow)
        self.action_styleDark.setCheckable(True)
        self.action_styleDark.setChecked(False)
        self.action_styleDark.setObjectName("action_styleDark")
        self.action_styleWhite = QtWidgets.QAction(MainWindow)
        self.action_styleWhite.setCheckable(True)
        self.action_styleWhite.setObjectName("action_styleWhite")
        self.action_2 = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/image/new.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_2.setIcon(icon7)
        self.action_2.setIconVisibleInMenu(True)
        self.action_2.setObjectName("action_2")
        self.action_new = QtWidgets.QAction(MainWindow)
        self.action_new.setIcon(icon7)
        self.action_new.setObjectName("action_new")
        self.action_exit = QtWidgets.QAction(MainWindow)
        self.action_exit.setShortcut('Ctrl+Q')
        self.action_exit.triggered.connect(QtWidgets.qApp.quit)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/image/exit.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_exit.setIcon(icon8)
        self.action_exit.setObjectName("action_exit")
        self.action_Qt = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/image/aboutqt.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Qt.setIcon(icon9)
        self.action_Qt.setObjectName("action_Qt")
        self.action12 = QtWidgets.QAction(MainWindow)
        self.action12.setObjectName("action12")
        self.action13 = QtWidgets.QAction(MainWindow)
        self.action13.setObjectName("action13")
        self.action14 = QtWidgets.QAction(MainWindow)
        self.action14.setObjectName("action14")
        # self.menu_file.addAction(self.action_saveRecnews)
        self.menu_file.addAction(self.action_exit)
        self.menuBar.addAction(self.menu_file.menuAction())
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.toolBox.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.comboBox_baund, self.comboBox_bytesize)
        MainWindow.setTabOrder(self.comboBox_bytesize, self.comboBox_parity)
        MainWindow.setTabOrder(self.comboBox_parity, self.comboBox_xonxoff)
        MainWindow.setTabOrder(self.comboBox_xonxoff, self.textEdit)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)


    def comboBoxAIndexChanged(self):
        if self.comboBox.currentText() == "色调":
            items = {
                "标准(01)": "0x01",
                "色调1(02)": "0x02",
                "色调2(03)": "0x03",
                "色调3(04)": "0x04",
                "色调4(05)": "0x05"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "白平衡模式":
            items = {
                "AWB(01)": "0x01",
                "ATW(02)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "数字降噪":
            items = {
                "关(01)": "0x01",
                "低(02)": "0x02",
                "中(03)": "0x03",
                "高(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "电子放大":
            items = {
                "×1.0(01)": "0x01",
                "×1.1(02)": "0x02",
                "×1.2(03)": "0x03",
                "×1.3(04)": "0x04",
                "×1.4(05)": "0x05",
                "×1.5(06)": "0x06",
                "×1.6(07)": "0x07",
                "×1.7(08)": "0x08",
                "×1.8(09)": "0x09",
                "×1.9(0a)": "0x0a",
                "×2.0(0b)": "0x0b",
                "×2.1(0c)": "0x0c",
                "×2.2(0d)": "0x0d",
                "×2.3(0e)": "0x0e",
                "×2.4(0f)": "0x0f",
                "×2.5(10)": "0x10",
                "×2.6(11)": "0x11",
                "×2.7(12)": "0x12",
                "×2.8(13)": "0x13",
                "×2.9(14)": "0x14",
                "×3.0(15)": "0x15",
                "×3.1(16)": "0x16",
                "×3.2(17)": "0x17",
                "×3.3(18)": "0x18",
                "×3.4(19)": "0x19",
                "×3.5(1a)": "0x1a",
                "×3.6(1b)": "0x1b",
                "×3.7(1c)": "0x1c",
                "×3.8(1d)": "0x1d",
                "×3.9(1e)": "0x1e",
                "×4.0(1f)": "0x1f",
                "×4.1(20)": "0x20",
                "×4.2(21)": "0x21",
                "×4.3(22)": "0x22",
                "×4.4(23)": "0x23",
                "×4.5(24)": "0x24",
                "×4.6(25)": "0x25",
                "×4.7(26)": "0x26",
                "×4.8(27)": "0x27",
                "×4.9(28)": "0x28",
                "×5.0(29)": "0x29",
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "电子缩小":
            items = {
                "×0.5(01)": "0x01",
                "×0.6(02)": "0x02",
                "×0.7(03)": "0x03",
                "×0.8(04)": "0x04",
                "×0.9(05)": "0x05",
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "电子放大/缩小":
            items = {
                "×0.5(01)": "0x01",
                "×0.6(02)": "0x02",
                "×0.7(03)": "0x03",
                "×0.8(04)": "0x04",
                "×0.9(05)": "0x05",
                "×1.0(06)": "0x06",
                "×1.1(07)": "0x07",
                "×1.2(08)": "0x08",
                "×1.3(09)": "0x09",
                "×1.4(0A)": "0x0A",
                "×1.5(0B)": "0x0B",
                "×1.6(0C)": "0x0C",
                "×1.7(0D)": "0x0D",
                "×1.8(0E)": "0x0E",
                "×1.9(0F)": "0x0F",
                "×2.0(10)": "0x10",
                "×2.1(11)": "0x11",
                "×2.2(12)": "0x12",
                "×2.3(13)": "0x13",
                "×2.4(14)": "0x14",
                "×2.5(15)": "0x15",
                "×2.6(16)": "0x16",
                "×2.7(17)": "0x17",
                "×2.8(18)": "0x18",
                "×2.9(19)": "0x19",
                "×3.0(1A)": "0x1A",
                "×3.1(1B)": "0x1B",
                "×3.2(1C)": "0x1C",
                "×3.3(1D)": "0x1D",
                "×3.4(1E)": "0x1E",
                "×3.5(1F)": "0x1F",
                "×3.6(20)": "0x20",
                "×3.7(21)": "0x21",
                "×3.8(22)": "0x22",
                "×3.9(23)": "0x23",
                "×4.0(24)": "0x24",
                "×4.1(25)": "0x25",
                "×4.2(26)": "0x26",
                "×4.3(27)": "0x27",
                "×4.4(28)": "0x28",
                "×4.5(29)": "0x29",
                "×4.6(2A)": "0x2A",
                "×4.7(2B)": "0x2B",
                "×4.8(2C)": "0x2C",
                "×4.9(2D)": "0x2D",
                "×5.0(2E)": "0x2E"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "亮度":
            items = {
                "1(01)": "0x01",
                "2(02)": "0x02",
                "3(03)": "0x03",
                "4(04)": "0x04",
                "5(05)": "0x05",
                "6(06)": "0x06",
                "7(07)": "0x07",
                "8(08)": "0x08",
                "9(09)": "0x09",
                "10(0a)": "0x0a"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "锐度":
            items = {
                "1(01)": "0x01",
                "2(02)": "0x02",
                "3(03)": "0x03",
                "4(04)": "0x04",
                "5(05)": "0x05",
                "6(06)": "0x06",
                "7(07)": "0x07",
                "8(08)": "0x08",
                "9(09)": "0x09",
                "10(0a)": "0x0a"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "饱和度":
            items = {
                "1(01)": "0x01",
                "2(02)": "0x02",
                "3(03)": "0x03",
                "4(04)": "0x04",
                "5(05)": "0x05",
                "6(06)": "0x06",
                "7(07)": "0x07",
                "8(08)": "0x08",
                "9(09)": "0x09",
                "10(0a)": "0x0a"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "对比度":
            items = {
                "1(01)": "0x01",
                "2(02)": "0x02",
                "3(03)": "0x03",
                "4(04)": "0x04",
                "5(05)": "0x05",
                "6(06)": "0x06",
                "7(07)": "0x07",
                "8(08)": "0x08",
                "9(09)": "0x09",
                "10(0a)": "0x0a"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "伽马":
            items = {
                "标准(01)": "0x01",
                "柔和(02)": "0x02",
                "通透(03)": "0x03"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "暗区改善":
            items = {
                "关(01)": "0x01",
                "低(02)": "0x02",
                "中(03)": "0x03",
                "高(03)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "高亮抑制":
            items = {
                "关(01)": "0x01",
                "低(02)": "0x02",
                "中(03)": "0x03",
                "高(03)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "去摩尔纹":
            items = {
                "关(01)": "0x01",
                "模式1(02)": "0x02",
                "模式2(03)": "0x03",
                "模式3(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "图像翻转":
            items = {
                "关(01)": "0x01",
                "水平翻转(02)": "0x02",
                "垂直翻转(03)": "0x03",
                "镜像(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "双镜显示":
            items = {
                "关(01)": "0x01",
                "右上(02)": "0x02",
                "右下(03)": "0x03",
                "左下(04)": "0x04",
                "左上(05)": "0x05",
                "并列(06)": "0x06"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "U盘操作":
            items = {
                "U盘格式化(01)": "0x01",
                "U盘弹出(02)": "0x02",
                "U盘容量(03)": "0x03",
                "U盘状态(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "U盘格式化":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "手柄按键1":
            items = {
                "AWB(01)": "0x01",
                "冻结(02)": "0x02",
                "录像(03)": "0x03",
                "抓图(04)": "0x04",
                "缩小(05)": "0x05",
                "放大(06)": "0x06",
                "色调(07)": "0x07",
                "降噪(08)": "0x08",
                "增益(09)": "0x09",
                "锐度(0a)": "0x0a",
                "饱和度(0b)": "0x0b",
                "对比度(0c)": "0x0c",
                "暗区改善(0d)": "0x0d",
                "高亮抑制(0e)": "0x0e",
                "去摩尔纹(0f)": "0x0f",
                "翻转(10)": "0x10",
                "去雾(11)": "0x11",
                "防红(12)": "0x12",
                "细节增强(13)": "0x13",
                "光源亮度+(14)": "0x14",
                "光源亮度-(15)": "0x15",
                "手动调焦+(17)": "0x17",
                "手动调焦-(18)": "0x18"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "手柄按键2":
            items = {
                "AWB(01)": "0x01",
                "冻结(02)": "0x02",
                "录像(03)": "0x03",
                "抓图(04)": "0x04",
                "缩小(05)": "0x05",
                "放大(06)": "0x06",
                "色调(07)": "0x07",
                "降噪(08)": "0x08",
                "增益(09)": "0x09",
                "锐度(0a)": "0x0a",
                "饱和度(0b)": "0x0b",
                "对比度(0c)": "0x0c",
                "暗区改善(0d)": "0x0d",
                "高亮抑制(0e)": "0x0e",
                "去摩尔纹(0f)": "0x0f",
                "翻转(10)": "0x10",
                "去雾(11)": "0x11",
                "防红(12)": "0x12",
                "细节增强(13)": "0x13",
                "光源亮度+(14)": "0x14",
                "光源亮度-(15)": "0x15",
                "手动调焦+(17)": "0x17",
                "手动调焦-(18)": "0x18"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "手柄按键3":
            items = {
                "AWB(01)": "0x01",
                "冻结(02)": "0x02",
                "录像(03)": "0x03",
                "抓图(04)": "0x04",
                "缩小(05)": "0x05",
                "放大(06)": "0x06",
                "色调(07)": "0x07",
                "降噪(08)": "0x08",
                "增益(09)": "0x09",
                "锐度(0a)": "0x0a",
                "饱和度(0b)": "0x0b",
                "对比度(0c)": "0x0c",
                "暗区改善(0d)": "0x0d",
                "高亮抑制(0e)": "0x0e",
                "去摩尔纹(0f)": "0x0f",
                "翻转(10)": "0x10",
                "去雾(11)": "0x11",
                "防红(12)": "0x12",
                "细节增强(13)": "0x13",
                "光源亮度+(14)": "0x14",
                "光源亮度-(15)": "0x15",
                "手动调焦+(17)": "0x17",
                "手动调焦-(18)": "0x18"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "手柄按键4":
            items = {
                "AWB(01)": "0x01",
                "冻结(02)": "0x02",
                "录像(03)": "0x03",
                "抓图(04)": "0x04",
                "缩小(05)": "0x05",
                "放大(06)": "0x06",
                "色调(07)": "0x07",
                "降噪(08)": "0x08",
                "增益(09)": "0x09",
                "锐度(0a)": "0x0a",
                "饱和度(0b)": "0x0b",
                "对比度(0c)": "0x0c",
                "暗区改善(0d)": "0x0d",
                "高亮抑制(0e)": "0x0e",
                "去摩尔纹(0f)": "0x0f",
                "翻转(10)": "0x10",
                "去雾(11)": "0x11",
                "防红(12)": "0x12",
                "细节增强(13)": "0x13",
                "光源亮度+(14)": "0x14",
                "光源亮度-(15)": "0x15",
                "手动调焦+(17)": "0x17",
                "手动调焦-(18)": "0x18"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "语言选择":
            items = {
                "中文(01)": "0x01",
                "English(02)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "视频质量":
            items = {
                "最佳(01)": "0x01",
                "高(02)": "0x02",
                "中(03)": "0x03",
                "低(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "图片质量":
            items = {
                "最佳(01)": "0x01",
                "高(02)": "0x02",
                "中(03)": "0x03",
                "低(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "增益":
            items = {
                "关(00)": "0x00",
                "1(01)": "0x01",
                "2(02)": "0x02",
                "3(03)": "0x03",
                "4(04)": "0x04",
                "5(05)": "0x05",
                "6(06)": "0x06",
                "7(07)": "0x07",
                "8(08)": "0x08",
                "9(09)": "0x09",
                "10(0a)": "0x0a"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "分辨率设置":
            items = {
                "3840×2160": "0x00",
                "1920×1080": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "分辨率帧率设置":
            items = {
                "1920*1080@60Hz": "0x01",
                "1920*1080@50Hz": "0x02",
                "1920*1080@30Hz": "0x03",
                "1920*1080@25Hz": "0x04",
                "3840*2160@60Hz": "0x05",
                "3840*2160@50Hz": "0x06",
                "3840*2160@30Hz": "0x07",
                "3840*2160@25Hz": "0x08"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "帧率设置":
            items = {
                "60Hz(01)": "0x01",
                "50Hz(02)": "0x02",
                "30Hz(03)": "0x03",
                "25Hz(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "图片格式":
            items = {
                "BMP(01)": "0x01",
                "JPEG(02)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "脚踏配置":
            items = {
                "AWB(01)": "0x01",
                "冻结(02)": "0x02",
                "录像(03)": "0x03",
                "抓图(04)": "0x04",
                "缩小(05)": "0x05",
                "放大(06)": "0x06",
                "色调(07)": "0x07",
                "降噪(08)": "0x08",
                "增益(09)": "0x09",
                "锐度(0a)": "0x0a",
                "饱和度(0b)": "0x0b",
                "对比度(0c)": "0x0c",
                "暗区改善(0d)": "0x0d",
                "高亮抑制(0e)": "0x0e",
                "去摩尔纹(0f)": "0x0f",
                "翻转(10)": "0x10",
                "去雾(11)": "0x11",
                "防红(12)": "0x12",
                "细节增强(13)": "0x13",
                "光源亮度+(14)": "0x14",
                "光源亮度-(15)": "0x15"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "手动白平衡RGAIN":
            items = {
                "R GAIN 0": "0x00",
                "R GAIN 51": "0x33",
                "R GAIN 127": "0x7F"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "手动白平衡BGAIN":
            items = {
                "B GAIN 0": "0x00",
                "B GAIN 70": "0x46",
                "B GAIN 127": "0x7F"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "日期-年":
            items = {
                "2000": "0x00",
                "2099": "0x63",
                "2022": "0x16",
                "非约定(64)": "0x64"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "日期-月":
            items = {
                "1月": "0x01",
                "2月": "0x02",
                "4月": "0x04",
                "5月": "0x05",
                "12月": "0x0C",
                "非约定1(00)": "0x00",
                "非约定2(0D)": "0x0D"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "日期-日":
            items = {
                "1": "0x01",
                "28": "0x1C",
                "29": "0x1D",
                "30": "0x1E",
                "31": "0x1F",
                "非约定1(00)": "0x00",
                "非约定2(20)": "0x20"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "日期-时":
            items = {
                "0": "0x00",
                "23": "0x17",
                "非约定(18)": "0x18"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "日期-分":
            items = {
                "0": "0x00",
                "59": "0x3B",
                "非约定(3C)": "0x3C"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "场景切换":
            items = {
                "标准(01)": "0x01",
                "用户1(02)": "0x02",
                "用户2(03)": "0x03",
                "用户3(04)": "0x04",
                "用户4(05)": "0x05",
                "用户5(06)": "0x06",
                "用户6(07)": "0x07",
                "用户7(08)": "0x08",
                "用户8(09)": "0x09",
                "用户9(0a)": "0x0a"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "去雾":
            items = {
                "关(01)": "0x01",
                "低(02)": "0x02",
                "中(03)": "0x03",
                "高(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "防红溢出":
            items = {
                "关(01)": "0x01",
                "低(02)": "0x02",
                "中(03)": "0x03",
                "高(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "细节滤镜":
            items = {
                "关(01)": "0x01",
                "模式1(02)": "0x02",
                "模式2(03)": "0x03",
                "模式3(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "画中画":
            items = {
                "关(01)": "0x01",
                "去雾(02)": "0x02",
                "防红(03)": "0x03",
                "滤镜(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "显示模式":
            items = {
                "全屏显示(01)": "0x01",
                "分屏显示(02)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "主屏显示":
            items = {
                "白光(01)": "0x01",
                "荧光(02)": "0x02",
                "融合模式(03)": "0x03",
                "灰阶渐变(04)": "0x04"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "融合色彩":
            items = {
                "绿色正显影(01)": "0x01",
                "绿色负显影(02)": "0x02",
                "蓝色负显影(03)": "0x03",
                "蓝绿橙渐变(04)": "0x04",
                "蓝紫渐变(05)": "0x05",
                "橙黄渐变(06)": "0x06",
                "绿黄渐变(07)": "0x07",
                "绿蓝紫渐变(08)": "0x08",
                "蓝橙灰渐变(09)": "0x09",
                "绿紫灰渐变(0a)": "0x0a",
                "绿黄橙渐变(0b)": "0x0b",
                "绿蓝渐变(0c)": "0x0c",
                "非约定1(00)": "0x00",
                "非约定2(0C)": "0x0C",
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "荧光增益":
            items = {
                "关闭(00)": "0x00",
                "增益1(01)": "0x01",
                "增益10(0a)": "0x0a",
                "增益5(05)": "0x05",
                "非约定(0b)": "0x0b"

            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "荧光亮度":
            items = {
                "荧光亮度1(01)": "0x01",
                "荧光亮度10(0a)": "0x0a",
                "荧光亮度5(05)": "0x05",
                "非约定1(0b)": "0x0b",
                "非约定2(00)": "0x00"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "荧光对比度":
            items = {
                "荧光对比度1(01)": "0x01",
                "荧光对比度10(0a)": "0x0a",
                "荧光对比度5(05)": "0x05",
                "非约定1(0b)": "0x0b",
                "非约定2(00)": "0x00"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "显彰饱和度":
            items = {
                "显彰饱和度1(01)": "0x01",
                "显彰饱和度10(0a)": "0x0a",
                "显彰饱和度5(05)": "0x05",
                "非约定1(0b)": "0x0b",
                "非约定2(00)": "0x00"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "轮廓模式":
            items = {
                "关(01)": "0x01",
                "模式1(02)": "0x02",
                "模式2(03)": "0x03",
                "模式3(04)": "0x04",
                "非约定1(00)": "0x00",
                "非约定2(05)": "0x05"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "彩条":
            items = {
                "关(01)": "0x01",
                "开(02)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "上报状态信息":
            items = {
                "关(01)": "0x01",
                "开(02)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "查询当前手柄型号":
            items = {
                "默认值": "0x01",
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "蜂鸣器":
            items = {
                "关闭": "0x01",
                "开启(默认)": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "串口回传":
            items = {
                "开启(默认)": "0x02",
                "其他 关闭": "0x00"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "智能曝光":
            items = {
                "关闭": "0x01",
                "开启": "0x02"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "硬盘格式化":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "硬盘导出开始":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "硬盘导出结束":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "U盘弹出":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "抓图":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "开始录像":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()
        if self.comboBox.currentText() == "结束录像":
            items = {
                "默认": "0x01"
            }
            self.comboBox_2.items1 = items
            self.comboBox_2.update_items()



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "串口测试工具"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'宋体\'; font-size:10pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'SimSun\'; font-size:12pt; font-weight:400;\"><br /></p></body></html>"))
        self.groupBox_uartSetting.setTitle(_translate("MainWindow", "串口设置"))
        self.label_uartCheckBit.setText(_translate("MainWindow", "校验位"))
        self.comboBox_xonxoff.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_xonxoff.setItemText(1, _translate("MainWindow", "RTS/CTS"))
        self.comboBox_xonxoff.setItemText(2, _translate("MainWindow", "XON/XOFF"))
        self.comboBox_stopbits.setItemText(0, _translate("MainWindow", "1"))
        self.comboBox_stopbits.setItemText(1, _translate("MainWindow", "2"))
        self.comboBox_bytesize.setItemText(0, _translate("MainWindow", "5"))
        self.comboBox_bytesize.setItemText(1, _translate("MainWindow", "6"))
        self.comboBox_bytesize.setItemText(2, _translate("MainWindow", "7"))
        self.comboBox_bytesize.setItemText(3, _translate("MainWindow", "8"))
        self.comboBox_baund.setCurrentText(_translate("MainWindow", "1200"))
        self.comboBox_baund.setItemText(0, _translate("MainWindow", "1200"))
        self.comboBox_baund.setItemText(1, _translate("MainWindow", "2400"))
        self.comboBox_baund.setItemText(2, _translate("MainWindow", "4800"))
        self.comboBox_baund.setItemText(3, _translate("MainWindow", "9600"))
        self.comboBox_baund.setItemText(4, _translate("MainWindow", "19200"))
        self.comboBox_baund.setItemText(5, _translate("MainWindow", "38400"))
        self.comboBox_baund.setItemText(6, _translate("MainWindow", "57600"))
        self.comboBox_baund.setItemText(7, _translate("MainWindow", "115200"))
        self.label_uartFlowControl.setText(_translate("MainWindow", "流控"))
        self.label_uartPort.setText(_translate("MainWindow", "端口"))
        self.label_uartDataLen.setText(_translate("MainWindow", "数据位"))
        self.label_uartDps.setText(_translate("MainWindow", "波特率"))
        self.comboBox_parity.setItemText(0, _translate("MainWindow", "None"))
        self.comboBox_parity.setItemText(1, _translate("MainWindow", "Even"))
        self.comboBox_parity.setItemText(2, _translate("MainWindow", "Odd"))
        self.comboBox_parity.setItemText(3, _translate("MainWindow", "Space"))
        self.comboBox_parity.setItemText(4, _translate("MainWindow", "Mark"))
        self.label_uartStopBit.setText(_translate("MainWindow", "停止位"))
        self.pushButton_connect.setText(_translate("MainWindow", "连接"))
        self.pushButton_disconnect.setText(_translate("MainWindow", "断开"))
        self.radioButton_mik53D.setText(_translate("MainWindow", "MIK5 3D"))
        self.radioButton_mik5.setText(_translate("MainWindow", "MIK5荧光"))
        self.radioButton_mik3.setText(_translate("MainWindow", "MIK3基线"))
        self.radioButton_mip.setText(_translate("MainWindow", "MIP"))
        self.pushButton_clear.setText(_translate("MainWindow", "清空"))
        self.groupBox_4.setTitle(_translate("MainWindow", "快捷发送"))
        self.lineEdit_senddata_1.setText(_translate("MainWindow", "55"))
        self.lineEdit_senddata_2.setText(_translate("MainWindow", "06"))
        self.lineEdit_senddata_3.setText(_translate("MainWindow", "20"))
        self.buttom_senddata.setText(_translate("MainWindow", "发送"))
        self.groupBox_5.setTitle(_translate("MainWindow", "手动发送"))
        self.buttom_sendout.setText(_translate("MainWindow", "发送"))
        self.groupBox.setTitle(_translate("MainWindow", "面板按键"))
        self.pushButton_capture.setText(_translate("MainWindow", "抓图"))
        self.pushButton_right.setText(_translate("MainWindow", "right"))
        self.pushButton_right.setShortcut(_translate("MainWindow", "Right"))
        self.pushButton_search.setText(_translate("MainWindow", "menu(F12)"))
        self.pushButton_search.setShortcut(_translate("MainWindow", "F12"))
        self.pushButton_left.setText(_translate("MainWindow", "left"))
        self.pushButton_left.setShortcut(_translate("MainWindow", "Left"))
        self.pushButton_record.setText(_translate("MainWindow", "录像"))
        self.pushButton_up.setText(_translate("MainWindow", "up"))
        self.pushButton_up.setShortcut(_translate("MainWindow", "Up"))
        self.pushButton_freeze.setText(_translate("MainWindow", "冻结"))
        self.pushButton_ok.setText(_translate("MainWindow", "ok"))
        self.pushButton_ok.setShortcut(_translate("MainWindow", "Return"))
        self.pushButton_down.setText(_translate("MainWindow", "down"))
        self.pushButton_down.setShortcut(_translate("MainWindow", "Down"))
        self.pushButton_back.setText(_translate("MainWindow", "back"))
        self.pushButton_back.setShortcut(_translate("MainWindow", "Backspace"))
        self.pushButton_mode.setText(_translate("MainWindow", "Mode"))
        self.pushButton_act_3.setText(_translate("MainWindow", "循环发送"))
        self.pushButton_start.setText(_translate("MainWindow", "发送"))
        # self.pushButton_stop.setText(_translate("MainWindow", "停止"))
        self.label.setText(_translate("MainWindow", "循环执行次数："))
        self.lineEdit_time.setText(_translate("MainWindow", "3"))
        self.label_5.setText(_translate("MainWindow", "发送间隔时间："))
        self.lineEdit_time_2.setText(_translate("MainWindow", "3"))
        self.label_6.setText(_translate("MainWindow", "s"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_3), _translate("MainWindow", "定时执行"))
        self.pushButton_reset.setText(_translate("MainWindow", "初始化设备"))
        self.pushButton_create.setText(_translate("MainWindow", "开始"))
        self.pushButton_insert.setText(_translate("MainWindow", "新增"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_4), _translate("MainWindow", "脚本录制"))
        self.pushButton_compare.setText(_translate("MainWindow", "设备参数信息对比"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "菜单操作"))
        self.pushButton_import.setText(_translate("MainWindow", "导入命令"))
        self.pushButton_send_3.setText(_translate("MainWindow", "发送命令"))
        self.pushButton_ouput_3.setText(_translate("MainWindow", "导出结果"))
        self.pushButton_stop_3.setText(_translate("MainWindow", "停止执行"))
        self.lineEdit_cycleNum.setText(_translate("MainWindow", "1"))
        self.lineEdit_cycleTime.setText(_translate("MainWindow", "3"))
        self.label_2.setText(_translate("MainWindow", "脚本循环次数："))
        self.label_3.setText(_translate("MainWindow", "执行间隔时间："))
        self.label_4.setText(_translate("MainWindow", "s"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "批量导入执行"))
        self.menu_file.setTitle(_translate("MainWindow", "文件"))
        # self.action_saveRecnews.setText(_translate("MainWindow", "导出.txt"))
        self.action_savePreferences.setText(_translate("MainWindow", "保存偏好"))
        self.action_setPreferences.setText(_translate("MainWindow", "选择默认偏好"))
        self.action_ASCII.setText(_translate("MainWindow", "ASCII"))
        self.action_baseConversion.setText(_translate("MainWindow", "进制转换"))
        self.action_aboutUHelper.setText(_translate("MainWindow", "关于UHelper"))
        self.action_aboutAuthor.setText(_translate("MainWindow", "关于作者"))
        self.action_pushbug.setText(_translate("MainWindow", "bug反馈"))
        self.action_setFont.setText(_translate("MainWindow", "字体"))
        self.action_styleDefault.setText(_translate("MainWindow", "默认风格"))
        self.action_styleDark.setText(_translate("MainWindow", "黑色炫酷"))
        self.action_styleWhite.setText(_translate("MainWindow", "白色靓丽"))
        self.action_2.setText(_translate("MainWindow", "新建"))
        self.action_new.setText(_translate("MainWindow", "新建"))
        self.action_exit.setText(_translate("MainWindow", "退出"))
        self.action_Qt.setText(_translate("MainWindow", "关于Qt"))
        self.action12.setText(_translate("MainWindow", "12"))
        self.action13.setText(_translate("MainWindow", "13"))
        self.action14.setText(_translate("MainWindow", "14"))
        self.comboBox_baund.setCurrentIndex(3)
        self.comboBox_bytesize.setCurrentIndex(3)
        self.radioButton_mik3.setChecked(True)
        self.updateComboBoxOptions(True)
